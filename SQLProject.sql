--1. Tính AvegarePrice

SELECT *  FROM 
(
SELECT
	T1.Ticker,
	T1.OrganShortName,
	T1.TradingDate,
	CASE WHEN T1.AveragePrice > 0 THEN T1.AveragePrice
	ELSE TotalValue/TotalVolume
	END 
	AS AveragePrice 
FROM
	[MCI].[DBO].[VALUE_VN30] T1
LEFT JOIN
	[MCI].[DBO].[VOLUME_VN30] T2 
	ON T1.TradingDate = T2.TradingDate AND T1.Ticker = T2.Ticker

) AS SUB


--2. CHỌN RA MÃ CHỨNG KHOÁN VÀ TỔNG SỐ LƯỢNG BÁN (TOTALSELLTRADEVOLUME) 
--VỚI MÃ CHỨNG KHOÁN CÓ TỔNG SỐ LƯỢNG LỆNH BÁN LỚN NHẤT (TOTALSELLTRADE)

SELECT TICKER, SUM(TOTALSELLTRADEVOLUME) TOTALSELLTRADEVOLUME
FROM MCI.DBO.VOLUME_VN30 
WHERE TICKER IN (SELECT TICKER FROM
					(SELECT TICKER, TOTALSELLTRADE, RANK() OVER (ORDER BY TOTALSELLTRADE DESC) XEP_HANG FROM VOLUME_VN30) T1
					WHERE XEP_HANG = 1)
GROUP BY TICKER

--3.	CHỌN RA DANH SÁCH CÁC NGÀY BỊ LỖI DỮ LIỆU

SELECT * FROM [MCI].[DBO].[VALUE_VN30]
  WHERE [HIGHESTPRICE] < [LOWESTPRICE]

--4.	CHỌN RA DANH SÁCH CÓ AVERAGE LỚN NHẤT ĐỐI VỚI TỪNG NĂM CỦA CÁC MÃ CK VỚI CÁC ĐK:
--+ CÁC NGÀY KHÔNG BỊ LỖI DỮ LIỆU
--+ CÁC NGÀY KHÔNG CÓ KHỐI NGOẠI GIAO DỊCH ([ForeignSellVolumeTotal] = 0 VÀ [ForeignBuyVolumeTotal] = 0)

SELECT 	YEAR(TRADINGDATE) YEAR, AVERAGEPRICE
FROM 
(SELECT *, RANK() OVER (PARTITION BY YEAR(TRADINGDATE) ORDER BY AVERAGEPRICE DESC) XEP_HANG FROM 
(SELECT
	T1.TICKER,
	T1.ORGANSHORTNAME,
	T1.TRADINGDATE,
	CASE WHEN T1.AVERAGEPRICE > 0 THEN T1.AVERAGEPRICE
	ELSE ISNULL(TOTALVALUE/NULLIF(TOTALVOLUME,0),0)
	END 
	AS AVERAGEPRICE 
FROM
	[MCI].[DBO].[VALUE_VN30] T1
LEFT JOIN
	[MCI].[DBO].[VOLUME_VN30] T2 
	ON T1.TRADINGDATE = T2.TRADINGDATE AND T1.TICKER = T2.TICKER) T1
WHERE NOT EXISTS (SELECT DISTINCT TRADINGDATE FROM MCI.DBO.VALUE_VN30
							WHERE HIGHESTPRICE < LOWESTPRICE
								AND T1.TradingDate = MCI.DBO.VALUE_VN30.TradingDate)

	AND NOT EXISTS (SELECT DISTINCT TRADINGDATE FROM  MCI.DBO.VOLUME_VN30
								WHERE [FOREIGNSELLVOLUMETOTAL] = 0 
									AND [FOREIGNBUYVOLUMETOTAL] = 0
									AND T1.TradingDate = MCI.DBO.VOLUME_VN30.TradingDate)) T2
WHERE XEP_HANG = 1



--5.	TẠO PROCEDURE (PROC_HW1_1) CHỌN RA MÃ CHỨNG KHOÁN VÀ TỔNG SỐ LƯỢNG BÁN (TOTALSELLTRADEVOLUME) 
--VỚI MÃ CHỨNG KHOÁN CÓ TỔNG SỐ LƯỢNG LỆNH BÁN LỚN NHẤT (TOTALSELLTRADE)

CREATE PROC PROC_HW1_1 
AS
BEGIN

SELECT 	YEAR(TRADINGDATE) YEAR, AVERAGEPRICE
FROM 
(SELECT *, RANK() OVER (PARTITION BY YEAR(TRADINGDATE) ORDER BY AVERAGEPRICE DESC) XEP_HANG FROM 
(SELECT
	T1.TICKER,
	T1.ORGANSHORTNAME,
	T1.TRADINGDATE,
	CASE WHEN T1.AVERAGEPRICE > 0 THEN T1.AVERAGEPRICE
	ELSE ISNULL(TOTALVALUE/NULLIF(TOTALVOLUME,0),0)
	END 
	AS AVERAGEPRICE 
FROM
	[MCI].[DBO].[VALUE_VN30] T1
LEFT JOIN
	[MCI].[DBO].[VOLUME_VN30] T2 
	ON T1.TRADINGDATE = T2.TRADINGDATE AND T1.TICKER = T2.TICKER) T1
WHERE NOT EXISTS (SELECT DISTINCT TRADINGDATE FROM MCI.DBO.VALUE_VN30
							WHERE HIGHESTPRICE < LOWESTPRICE
								AND T1.TradingDate = MCI.DBO.VALUE_VN30.TradingDate)

	AND NOT EXISTS (SELECT DISTINCT TRADINGDATE FROM  MCI.DBO.VOLUME_VN30
								WHERE [FOREIGNSELLVOLUMETOTAL] = 0 
									AND [FOREIGNBUYVOLUMETOTAL] = 0
									AND T1.TradingDate = MCI.DBO.VOLUME_VN30.TradingDate)) T2
WHERE XEP_HANG = 1

END

EXEC PROC_HW1_1
--6. Tạo Function (FUN_L2_1) tính AveragePrice cho các mã CK

CREATE FUNCTION FUNC_L2_1 (@TICKER VARCHAR(3), @DATE VARCHAR(8))
RETURNS FLOAT
BEGIN
DECLARE @AVGPRICE FLOAT =
							(SELECT
								CASE WHEN T1.AVERAGEPRICE > 0 THEN T1.AVERAGEPRICE
								ELSE ISNULL(TOTALVALUE/NULLIF(TOTALVOLUME,0),0)
								END 
								AS AVERAGEPRICE 
							FROM
								(SELECT * FROM [MCI].[DBO].[VALUE_VN30]
								WHERE TICKER = @TICKER
									AND TRADINGDATE = @DATE) T1
							LEFT JOIN
								(SELECT * FROM [MCI].[DBO].[VOLUME_VN30]
								WHERE TICKER = @TICKER
									AND TRADINGDATE = @DATE) T2 
								ON T1.TRADINGDATE = T2.TRADINGDATE AND T1.TICKER = T2.TICKER)

RETURN @AVGPRICE
END

SELECT DBO.FUNC_L2_1 ('ACB', '20210507')

SELECT TICKER, TRADINGDATE, DBO.FUNC_L2_1 (TICKER, CONVERT(VARCHAR,TRADINGDATE, 112)) AVG_PRICE FROM MCI.DBO.VALUE_VN30


--7. Dùng WHILE chọn ra màn hình Ticker, AveragePrice, TradingDate 
--	của mã CK MWG với các ngày giao dịch từ ngày 01/01/2022 đến ngày 03/03/2022 và không bị lỗi dữ liệu
DECLARE @DATE DATE ='20220101'

WHILE @DATE >= '20220101' 
		AND @DATE <= '20220303'
		AND @DATE NOT IN (SELECT DISTINCT TRADINGDATE FROM MCI.DBO.VALUE_VN30
						WHERE [HIGHESTPRICE] < [LOWESTPRICE])
BEGIN
SELECT TICKER,[DBO].[FUNC_L2_1] (TICKER, CONVERT(VARCHAR,TRADINGDATE,112)),TRADINGDATE FROM MCI.DBO.VALUE_VN30 
WHERE TICKER = 'MWG'
	AND TRADINGDATE = @DATE
SET @DATE = DATEADD(DAY,1,@DATE)


--8. Dùng CURSOR chọn ra màn hình Ticker, AveragePrice, TradingDate 
--của mã CK MWG với các ngày giao dịch từ 
--ngày 01/01/2022 đến ngày 03/03/2022 và không bị lỗi dữ liệu

DECLARE @TICKER VARCHAR(3)
DECLARE @AVERAGEPRICE FLOAT
DECLARE @TRADINGDATE DATE
DECLARE CURSO_TEST CURSOR FOR 
									SELECT TICKER,AVERAGEPRICE,TRADINGDATE 
									FROM MCI.DBO.VALUE_VN30
									WHERE TICKER='MWG' 
										AND TRADINGDATE<='20220303' 
										AND TRADINGDATE>='20220101'
										AND TRADINGDATE NOT IN (SELECT DISTINCT TRADINGDATE FROM MCI.DBO.VALUE_VN30
																	WHERE [HighestPrice] < [LowestPrice])
							
OPEN CURSO_TEST

FETCH NEXT FROM CURSO_TEST INTO @TICKER,@AVERAGEPRICE,@TRADINGDATE

WHILE @@FETCH_STATUS=0

BEGIN 
SELECT @TICKER,@AVERAGEPRICE,@TRADINGDATE 
FETCH NEXT FROM CURSO_TEST INTO @TICKER,@AVERAGEPRICE,@TRADINGDATE
END

CLOSE CURSO_TEST

DEALLOCATE CURSO_TEST


--9. Dùng WHILE điền dữ liệu vào bảng [MCI].[dbo].[STOCK_1]
--	Ticker, OrganShortName, TradingDate, HighestPrice, ClosePrice, AveragePrice, 
--	LowestPrice, OpenPrice, TotalValue, [TotalSellTradeVolume], [TotalBuyTradeVolume]
--	từ ngày 01/01/2022 đến ngày 03/03/2022

DECLARE @DATE DATE ='20220101'
WHILE @DATE<='20220303' 
		AND @DATE>='20220101'
BEGIN 

IF OBJECT_ID ('MCI.DBO.STOCK1') IS NOT NULL
BEGIN

DELETE MCI.DBO.STOCK1 
WHERE TRADINGDATE=@DATE

INSERT INTO MCI.DBO.STOCK1 
SELECT T1.TICKER,T1.ORGANSHORTNAME, T1.TRADINGDATE, HIGHESTPRICE, CLOSEPRICE, AVERAGEPRICE, 
	LOWESTPRICE, OPENPRICE, TOTALVALUE, T2.TOTALSELLTRADEVOLUME, T2.TOTALBUYTRADEVOLUME
	FROM MCI.DBO.VALUE_VN30 T1
	LEFT JOIN MCI.DBO.VOLUME_VN30 T2 ON T1.TICKER=T2.TICKER AND T1.TRADINGDATE=T2.TRADINGDATE
	WHERE T1.TRADINGDATE=@DATE
END
ELSE
BEGIN
SELECT T1.TICKER,T1.ORGANSHORTNAME, T1.TRADINGDATE, HIGHESTPRICE, CLOSEPRICE, AVERAGEPRICE, 
	LOWESTPRICE, OPENPRICE, TOTALVALUE, T2.TOTALSELLTRADEVOLUME, T2.TOTALBUYTRADEVOLUME
INTO MCI.DBO.STOCK1 
FROM MCI.DBO.VALUE_VN30 T1
	LEFT JOIN MCI.DBO.VOLUME_VN30 T2 ON T1.TICKER=T2.TICKER AND T1.TRADINGDATE=T2.TRADINGDATE 
WHERE T1.TRADINGDATE=@DATE
END

SET @DATE=DATEADD(DAY,1,@DATE)

END

--10. Dùng CURSOR điền dữ liệu vào bảng [MCI].[dbo].[STOCK_1]
--	Ticker, OrganShortName, TradingDate, HighestPrice, ClosePrice, AveragePrice, 
--	LowestPrice, OpenPrice, TotalValue, [TotalSellTradeVolume], [TotalBuyTradeVolume]
--	từ ngày 01/01/2022 đến ngày 03/03/2022

DECLARE @TICKER VARCHAR(3)
DECLARE @TRADINGDATE DATE
DECLARE CURSOPRODUCT CURSOR FOR 

	SELECT TICKER, TRADINGDATE
	FROM MCI.DBO.VALUE_VN30 
	WHERE TRADINGDATE<='20220303' 
		AND TRADINGDATE>='20220101'

OPEN CURSOPRODUCT
FETCH NEXT FROM CURSOPRODUCT INTO @TICKER,@TRADINGDATE

WHILE @@FETCH_STATUS=0

BEGIN

SELECT T1.TICKER,T1.ORGANSHORTNAME, T1.TRADINGDATE, HIGHESTPRICE, CLOSEPRICE, AVERAGEPRICE, 
	LOWESTPRICE, OPENPRICE, TOTALVALUE, T2.TOTALSELLTRADEVOLUME, T2.TOTALBUYTRADEVOLUME
	FROM MCI.DBO.VALUE_VN30 T1
	LEFT JOIN MCI.DBO.VOLUME_VN30 T2 ON T1.TICKER=T2.TICKER AND T1.TRADINGDATE=T2.TRADINGDATE
	WHERE T1.TICKER = @TICKER
		AND T1.TRADINGDATE = @TRADINGDATE

FETCH NEXT FROM CURSOPRODUCT INTO @TICKER,@TRADINGDATE
END
CLOSE CURSOPRODUCT
DEALLOCATE CURSOPRODUCT

--11. Dùng WHILE điền dữ liệu vào bảng [SQL_LV2].[dbo].[STOCK_2]
--	Ticker, OrganShortName, TradingDate, HighestPrice, ClosePrice, AveragePrice, 
--	LowestPrice, OpenPrice, TotalValue, [TotalSellTradeVolume], [TotalBuyTradeVolume]
--	lần lượt từng từng mã chứng khoán (HPG, ACB, SSI) tại ngày tradingdate = 18/03/2021 

SELECT ROW_NUMBER() OVER (ORDER BY TICKER) STT,TICKER FROM MCI.DBO.VOLUME_VN30
WHERE TICKER IN ('ACB', 'HPG', 'SSI')
	AND TRADINGDATE = '20210318'



DECLARE @BIEN INT = 1

WHILE @BIEN <= (SELECT MAX (STT) FROM (SELECT ROW_NUMBER() OVER (ORDER BY TICKER) STT,TICKER FROM MCI.DBO.VOLUME_VN30
										WHERE TICKER IN ('ACB', 'HPG', 'SSI')
											AND TRADINGDATE = '20210318')T1)

BEGIN
SELECT T1.TICKER,T1.ORGANSHORTNAME, T1.TRADINGDATE, HIGHESTPRICE, CLOSEPRICE, AVERAGEPRICE, 
			LOWESTPRICE, OPENPRICE, TOTALVALUE, T2.TOTALSELLTRADEVOLUME, T2.TOTALBUYTRADEVOLUME
			FROM MCI.DBO.VALUE_VN30 T1
			LEFT JOIN MCI.DBO.VOLUME_VN30 T2 ON T1.TICKER=T2.TICKER AND T1.TRADINGDATE=T2.TRADINGDATE
			WHERE T1.TICKER = (SELECT TICKER FROM (SELECT ROW_NUMBER() OVER (ORDER BY TICKER) STT,TICKER FROM MCI.DBO.VOLUME_VN30
													WHERE TICKER IN ('ACB', 'HPG', 'SSI')
														AND TRADINGDATE = '20210318')T1
								WHERE STT = @BIEN)
			AND T1.TRADINGDATE = '20210318' 

SET @BIEN = @BIEN + 1
END


--12.	Điền dữ liệu các ngày 26/09/2017 – 29/09/2017 vào các bảng 
--	SaoKeBaoLanh_201709
--THÊM TRIGGER ĐỂ KIỂM TRA NẾU ĐÃ TỒN TẠI NGÀY DỮ LIỆU CỦA BẢNG THÌ K ĐIỀN

1. INSTEAD OF

CREATE TRIGGER TRIGER_1
ON [MCI].[dbo].[SaoKeBaoLanh_201709]
INSTEAD OF INSERT
AS
BEGIN

IF (SELECT DISTINCT NGAY_DU_LIEU FROM [MCI].[dbo].[SaoKeBaoLanh_201709]
WHERE NGAY_DU_LIEU IN (SELECT DISTINCT NGAY_DU_LIEU FROM INSERTED)) > 0 

PRINT N'ĐÃ TỒN TẠI NGÀY DỮ LIỆU TRONG BẢNG'

ELSE
INSERT INTO [MCI].[dbo].[SaoKeBaoLanh_201709]
SELECT * FROM INSERTED
END


2. FOR/AFTER

CREATE TRIGGER TRIGER_1
ON [MCI].[dbo].[SaoKeBaoLanh_201709]
FOR INSERT
AS
BEGIN

IF (SELECT COUNT (NGAY_DU_LIEU) FROM [MCI].[dbo].[SaoKeBaoLanh_201709]
WHERE NGAY_DU_LIEU IN (SELECT DISTINCT NGAY_DU_LIEU FROM INSERTED)) > 
(SELECT COUNT (NGAY_DU_LIEU) FROM INSERTED)

 
 ROLLBACK

END
